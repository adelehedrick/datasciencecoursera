install(KernSmooth)
install.packages("KernSmooth")
library("KernSmooth")
x <- c("a", "b", "c")
x[1]
x[1:2]
x[x>"a"]
u <- x > "a"
u
x <- list(foo = 1:4, bar = 0.6)
x[1]
x[[1]]
x$bar
x[[bar]]
x[["bar"]]
x["bar"]
x[c(1,3)]
x <- list(foo = 1:4, bar = 0.6, foof = 7:9)
x[c(1,3)]
m <- matrix(1:6, 2, 3)
m
m[1,2]
m[2,1]
m[1,]
m[,2]
m[1,2, drop = FALSE]
m[1, , drop =FALSE]
x <- list(aardvark = 1:5)
x$bar
x$a
x[["a"]]
x[["a", exact = FALSE]]
x <- c(1, 2, NA, 4, NA, 5)
bad <- is.na(x)
x[!bad]
y <- c("a", "b", NA, "d", NA, "f")
good <- complete.cases(x, y)
good
x[good]
y[good]
install.packages("swirl")
install.packages('httr')
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
rm(list=ls())
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z *2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z *2+1000
my_div
getwd()
setwd("~/git/datasciencecoursera/r_intro")
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files
)
old.dir <- getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename(mytest.R, mytest2.R)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
?file.path
file.path("folder1")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2/testdir3")
dir.create("testdir2","testdir3")
dir.create("testdir2","testdir3", recursive = TRUE)
dir.create(file.path("testdir2","testdir3"), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
`:`
?`:`
seq(1:20)
seq(1,20)
seq(1, 10, by-0.5)
seq(1, 10, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each =10)
num_vect <- 0.5, 55, -10, 6
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
c(my_char, "Adele")
my_name <- c(my_char, "Adele")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c(1:3), c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <-rep(NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
dir()
x <- 4
class(x)
read.csv("hw1_data.csv")
data <- read.csv("hw1_data.csv")
data[2,]
data[1:2,]
dim(data)
data[152:153,]
data[47,]
sum(is.na(data["Ozone"]))
mean(data[["Ozone"][!is.na(data["Ozone"]]])
mean(data[["Ozone"][!is.na(data["Ozone"]])
my_ozone <- data['Ozone']
bad_ozone <- is.na(my_ozone)
mean(my_ozone[!bad_ozone])
data[1:6,]
good <- complete.cases(data)
mean(data[good,]["Ozone" > 31,]["Temp" > 90,]["Solar.R"])
subset <- data[good,]["Ozone" > 31,]["Temp" > 90,]
subset[1:6,]
subset <- data[good,]
subset["Ozone">31 & "Temp > 90", ]
subset[subset["Ozone"]>31 & subset["Temp"] > 90, ]
my_happy <- subset[subset["Ozone"]>31 & subset["Temp"] > 90, ]
mean(my_happy["Solar.R"])
mean(my_happy["Solar.R",])
my_happy["Solar.R",]
my_happy
mean(my_happy["Solar.R"])
?mean
mean(my_happy[["Solar.R"])
mean(my_happy[["Solar.R"]])
good <- complete.cases(data)
my_happy <- subset[subset["Month"]==6, ]
my_happy[1:6,]
mean(my_happy[["Temp"]])
my_happy <- good[good["Month"]==6, ]
good[good["Month"]==6,]
my_happy <- good[good["Month"]==6, ]]
my_happy <- good[good["Month"]=6, ]
my_happy <- good[good["Month"]==6, ]
dim(data)
good <- complete.cases(data)
dim(good)
data <- read.csv("hw1_data.csv")
dim(data)
good <- complete.cases(data)
my_happy <- data[good & data["Month"] == 6, ]
dim(my_happy)
mean(my_happy[["Month"]])
mean(my_happy[["Temp"]])
subby <- data[data["Month"]==6, ]
subby[1:6,]
mean(subby[["Temp"]])
subby <- data[data["Month"]==5,]
dim(subby)
max(subby[["Ozone"]])
subby[1:6]
subby[["Ozone"]]
max(subby[["Ozone"]])
oz <- complete.cases(subby[["Ozone"]])
oz
oz <- subby[oz]
oz <- subby[oz,]
oz
max(oz[["Ozone"]])
