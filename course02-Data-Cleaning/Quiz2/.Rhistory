install(KernSmooth)
install.packages("KernSmooth")
library("KernSmooth")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
install.packages("RMySQL")
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
content(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
install.packages('httpuv')
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. To make your own application, register at at
#    https://github.com/settings/applications. Use any URL for the homepage URL
#    (http://github.com is fine) and  http://localhost:1410 as the callback url
#
#    Replace your key and secret below.
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "6f584f7372c10116076be5aad86b7ce1af133194")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "7af44a480d9d79605216",
secret = "416d9831939b892b64c43a0814c70a83fd6caae5")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
content(req)
library(jsonlite)
jsonData <-fromJSON(req)
jsonData <-fromJSON("https://api.github.com/users/jtleek/repos)
jsonData <-fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
api_data <- content(req)
jsonData <-fromJSON(api_data)
header(api_data)
names(api_data)
jsonData <-fromJSON("https://api.github.com/users/jtleek/repos")
names(jsonData)
View(jsonData)
jsonData[which(jsonData["name"] == "datasharing"), c("created_at")]
install.package('sqldf')
install.packages('sqldf')
if (!file.exists("getdata_data_ss06pid.csv")) {
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",
destfile = "./getdata_data_ss06pid.csv", method = "curl")
}
house_data <- read.table("./getdata_data_ss06pid.csv", sep=",", header = TRUE)
head(house_data)
if (!file.exists("getdata_data_ss06pid.csv")) {
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",
destfile = "./getdata_data_ss06pid.csv", method = "curl")
}
install.packages('RCurl')
if (!file.exists("getdata_data_ss06pid.csv")) {
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",
destfile = "./getdata_data_ss06pid.csv", method = "curl")
}
house_data <- read.table("./getdata_data_ss06pid.csv", sep=",", header = TRUE)
head(house_data)
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",
destfile = "./getdata_data_ss06pid.csv", method = "curl")
library(RCurl)
library(RCurl)
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",
destfile = "./getdata_data_ss06pid.csv", method = "curl")
house_data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", sep=",", header = TRUE)
house_data <- read.table("./getdata_data_ss06pid.csv", sep=",", header = TRUE)
setwd("~/git/datasciencecoursera/course02-Data-Cleaning/Quiz2")
house_data <- read.table("./getdata_data_ss06pid.csv", sep=",", header = TRUE)
head(house_data)
sqldf("select pwgtp1 from acs where AGEP < 50")
library(sqldf)
sqldf("select pwgtp1 from acs where AGEP < 50")
View(house_data)
acs <- read.table("./getdata_data_ss06pid.csv", sep=",", header = TRUE)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select distinct AGEP from acs")
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(con)
close(con)
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
